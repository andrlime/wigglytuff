services:
  rabbitmq:
    image: rabbitmq:4-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
    expose:
      - "5672"
    restart: always
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d
    restart: always
  rpc-cache:
    image: andrewli2048/cache
    build:
      context: rpc-cache
      dockerfile: docker/Dockerfile
      target: ${BUILD_TARGET:-dev}
    develop:
      watch:
        - action: sync
          path: rpc-cache/
          target: /app/
        - action: rebuild
          path: rpc-cache/go.*
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    stop_signal: SIGTERM
    restart: always
  fetch-scraper:
    image: andrewli2048/scraper
    build:
      context: fetch-scraper
      dockerfile: docker/Dockerfile
      target: ${BUILD_TARGET:-dev}
    develop:
      watch:
        - action: sync
          path: fetch-scraper/scraper
          target: /app/scraper
        - action: rebuild
          path: fetch-scraper/pyproject.toml
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    stop_signal: SIGKILL
    restart: always
    healthcheck:
      test: ["CMD", "bash", "-c", "find /tmp/healthy -mmin -1"]
      interval: 30s
      timeout: 3s
      retries: 2
  # bot-notifier:
  #   image: andrewli2048/notifier
  #   build:
  #     context: bot-notifier
  #     dockerfile: docker/Dockerfile
  #     target: ${BUILD_TARGET:-dev}
  #   develop:
  #     watch:
  #       - action: sync
  #         path: bot-notifier/notifier
  #         target: /app/notifier
  #       - action: rebuild
  #         path: bot-notifier/pyproject.toml
  #   ports:
  #     - "9000:9000"
  #   stop_signal: SIGTERM
  #   restart: always
volumes:
  db:
